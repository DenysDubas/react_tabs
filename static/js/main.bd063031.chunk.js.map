{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTabs","find","tab","id","className","map","title","isCurrentTab","classNames","href","onClick","isTabCurrent","handleClickOnTab","content","App","useState","setSelectedTabId","currentTab","getCurrentTab","ReactDOM","render","document","getElementById"],"mappings":"kNAeaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAOvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MACNC,EAAeJ,IAAOH,EAAYG,GAExC,OACE,oBACEC,UAAWI,IACT,CAAE,YAAaD,IAEjB,UAAQ,MAJV,SAOE,mBACEE,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,kBAzBA,SAACC,EAAuBT,GAC1CS,GACHZ,EAAcG,GAuBaU,CAAiBL,EAAcL,IAHhD,SAKGI,KAPEH,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYa,cCnDRhB,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASO,QAAS,eACxC,CAAEV,GAAI,QAASG,MAAO,QAASO,QAAS,eACxC,CAAEV,GAAI,QAASG,MAAO,QAASO,QAAS,gBAS7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBkB,EAAtB,KAcA,OACE,sBAAKZ,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAdkB,WACpB,IAAMa,EAAapB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE/C,OAAOmB,EACHA,EAAWX,MACXT,EAAK,GAAGS,MAUYY,MAGtB,cAAC,EAAD,CACErB,KAAMA,EACNC,cAAeA,EACfC,cAbc,SAACG,GACnBc,EAAiBd,EAAIC,WC3BzBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bd063031.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTabs = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleClickOnTab = (isTabCurrent: boolean, tab: Tab) => {\n    if (!isTabCurrent) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isCurrentTab = id === currentTabs.id;\n\n            return (\n              <li\n                className={classNames(\n                  { 'is-active': isCurrentTab },\n                )}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleClickOnTab(isCurrentTab, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTabs.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getCurrentTab = () => {\n    const currentTab = tabs.find(tab => tab.id === selectedTabId);\n\n    return currentTab\n      ? currentTab.title\n      : tabs[0].title;\n  };\n\n  const handleClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getCurrentTab()}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}